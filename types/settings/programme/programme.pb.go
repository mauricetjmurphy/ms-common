// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: settings/programme/programme.proto

package programme

import (
	objects "github.com/mauricetjmurphy/ms-common/types/settings/objects"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Programme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title            string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	SlotDuration     int64            `protobuf:"varint,3,opt,name=slotDuration,proto3" json:"slotDuration,omitempty"`
	Year             int64            `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	NumberOfEpisodes int64            `protobuf:"varint,5,opt,name=numberOfEpisodes,proto3" json:"numberOfEpisodes,omitempty"`
	SeasonNumber     int64            `protobuf:"varint,6,opt,name=seasonNumber,proto3" json:"seasonNumber,omitempty"`
	NumberOfSeasons  int64            `protobuf:"varint,7,opt,name=numberOfSeasons,proto3" json:"numberOfSeasons,omitempty"`
	ProgrammeType    *ProgrammeType   `protobuf:"bytes,8,opt,name=programmeType,proto3" json:"programmeType,omitempty"`
	Episodes         []*Episode       `protobuf:"bytes,9,rep,name=episodes,proto3" json:"episodes,omitempty"`
	Genres           []*objects.Genre `protobuf:"bytes,10,rep,name=genres,proto3" json:"genres,omitempty"`
	Series           *Series          `protobuf:"bytes,11,opt,name=series,proto3" json:"series,omitempty"`
}

func (x *Programme) Reset() {
	*x = Programme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_programme_programme_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Programme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Programme) ProtoMessage() {}

func (x *Programme) ProtoReflect() protoreflect.Message {
	mi := &file_settings_programme_programme_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Programme.ProtoReflect.Descriptor instead.
func (*Programme) Descriptor() ([]byte, []int) {
	return file_settings_programme_programme_proto_rawDescGZIP(), []int{0}
}

func (x *Programme) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Programme) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Programme) GetSlotDuration() int64 {
	if x != nil {
		return x.SlotDuration
	}
	return 0
}

func (x *Programme) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Programme) GetNumberOfEpisodes() int64 {
	if x != nil {
		return x.NumberOfEpisodes
	}
	return 0
}

func (x *Programme) GetSeasonNumber() int64 {
	if x != nil {
		return x.SeasonNumber
	}
	return 0
}

func (x *Programme) GetNumberOfSeasons() int64 {
	if x != nil {
		return x.NumberOfSeasons
	}
	return 0
}

func (x *Programme) GetProgrammeType() *ProgrammeType {
	if x != nil {
		return x.ProgrammeType
	}
	return nil
}

func (x *Programme) GetEpisodes() []*Episode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

func (x *Programme) GetGenres() []*objects.Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Programme) GetSeries() *Series {
	if x != nil {
		return x.Series
	}
	return nil
}

type ProgrammeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code            string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	IsSingleProgram bool   `protobuf:"varint,4,opt,name=isSingleProgram,proto3" json:"isSingleProgram,omitempty"`
}

func (x *ProgrammeType) Reset() {
	*x = ProgrammeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_programme_programme_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgrammeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgrammeType) ProtoMessage() {}

func (x *ProgrammeType) ProtoReflect() protoreflect.Message {
	mi := &file_settings_programme_programme_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgrammeType.ProtoReflect.Descriptor instead.
func (*ProgrammeType) Descriptor() ([]byte, []int) {
	return file_settings_programme_programme_proto_rawDescGZIP(), []int{1}
}

func (x *ProgrammeType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProgrammeType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProgrammeType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProgrammeType) GetIsSingleProgram() bool {
	if x != nil {
		return x.IsSingleProgram
	}
	return false
}

type Series struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Series) Reset() {
	*x = Series{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_programme_programme_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_settings_programme_programme_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_settings_programme_programme_proto_rawDescGZIP(), []int{2}
}

func (x *Series) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Series) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Episode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title            string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Number           int64            `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	YearOfProduction int64            `protobuf:"varint,4,opt,name=yearOfProduction,proto3" json:"yearOfProduction,omitempty"`
	Genres           []*objects.Genre `protobuf:"bytes,5,rep,name=genres,proto3" json:"genres,omitempty"`
	Type             string           `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	SlotDuration     int64            `protobuf:"varint,7,opt,name=slotDuration,proto3" json:"slotDuration,omitempty"`
}

func (x *Episode) Reset() {
	*x = Episode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_programme_programme_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Episode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Episode) ProtoMessage() {}

func (x *Episode) ProtoReflect() protoreflect.Message {
	mi := &file_settings_programme_programme_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Episode.ProtoReflect.Descriptor instead.
func (*Episode) Descriptor() ([]byte, []int) {
	return file_settings_programme_programme_proto_rawDescGZIP(), []int{3}
}

func (x *Episode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Episode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Episode) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Episode) GetYearOfProduction() int64 {
	if x != nil {
		return x.YearOfProduction
	}
	return 0
}

func (x *Episode) GetGenres() []*objects.Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Episode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Episode) GetSlotDuration() int64 {
	if x != nil {
		return x.SlotDuration
	}
	return 0
}

var File_settings_programme_programme_proto protoreflect.FileDescriptor

var file_settings_programme_programme_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x1a, 0x1e, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x04, 0x0a,
	0x09, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6c, 0x6f, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6c, 0x6f, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x6d, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x4b, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x2e, 0x0a, 0x06,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xf0, 0x01, 0x0a,
	0x07, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x79, 0x65, 0x61, 0x72, 0x4f, 0x66,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x79, 0x65, 0x61, 0x72, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x6c, 0x6f, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x6c, 0x6f, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x42,
	0x43, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2f, 0x67, 0x76, 0x73, 0x2d, 0x6d,
	0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d,
	0x65, 0x3b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_settings_programme_programme_proto_rawDescOnce sync.Once
	file_settings_programme_programme_proto_rawDescData = file_settings_programme_programme_proto_rawDesc
)

func file_settings_programme_programme_proto_rawDescGZIP() []byte {
	file_settings_programme_programme_proto_rawDescOnce.Do(func() {
		file_settings_programme_programme_proto_rawDescData = protoimpl.X.CompressGZIP(file_settings_programme_programme_proto_rawDescData)
	})
	return file_settings_programme_programme_proto_rawDescData
}

var file_settings_programme_programme_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_settings_programme_programme_proto_goTypes = []interface{}{
	(*Programme)(nil),     // 0: com.inbcu.rpc.types.settings.programme.Programme
	(*ProgrammeType)(nil), // 1: com.inbcu.rpc.types.settings.programme.ProgrammeType
	(*Series)(nil),        // 2: com.inbcu.rpc.types.settings.programme.Series
	(*Episode)(nil),       // 3: com.inbcu.rpc.types.settings.programme.Episode
	(*objects.Genre)(nil), // 4: com.inbcu.rpc.types.settings.objects.Genre
}
var file_settings_programme_programme_proto_depIdxs = []int32{
	1, // 0: com.inbcu.rpc.types.settings.programme.Programme.programmeType:type_name -> com.inbcu.rpc.types.settings.programme.ProgrammeType
	3, // 1: com.inbcu.rpc.types.settings.programme.Programme.episodes:type_name -> com.inbcu.rpc.types.settings.programme.Episode
	4, // 2: com.inbcu.rpc.types.settings.programme.Programme.genres:type_name -> com.inbcu.rpc.types.settings.objects.Genre
	2, // 3: com.inbcu.rpc.types.settings.programme.Programme.series:type_name -> com.inbcu.rpc.types.settings.programme.Series
	4, // 4: com.inbcu.rpc.types.settings.programme.Episode.genres:type_name -> com.inbcu.rpc.types.settings.objects.Genre
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_settings_programme_programme_proto_init() }
func file_settings_programme_programme_proto_init() {
	if File_settings_programme_programme_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_settings_programme_programme_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Programme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_programme_programme_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgrammeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_programme_programme_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Series); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_programme_programme_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Episode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settings_programme_programme_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_settings_programme_programme_proto_goTypes,
		DependencyIndexes: file_settings_programme_programme_proto_depIdxs,
		MessageInfos:      file_settings_programme_programme_proto_msgTypes,
	}.Build()
	File_settings_programme_programme_proto = out.File
	file_settings_programme_programme_proto_rawDesc = nil
	file_settings_programme_programme_proto_goTypes = nil
	file_settings_programme_programme_proto_depIdxs = nil
}
