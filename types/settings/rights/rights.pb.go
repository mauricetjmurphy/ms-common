// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: settings/rights/rights.proto

package rights

import (
	channel "github.com/NBCUniversal/gvs-ms-common/types/settings/channel"
	territory "github.com/NBCUniversal/gvs-ms-common/types/settings/territory"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Rights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type             string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StartDate        string                 `protobuf:"bytes,3,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate          string                 `protobuf:"bytes,4,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Contract         *Contract              `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	ProgrammeId      int64                  `protobuf:"varint,6,opt,name=programmeId,proto3" json:"programmeId,omitempty"`
	Territories      []*territory.Territory `protobuf:"bytes,7,rep,name=territories,proto3" json:"territories,omitempty"`
	Channels         []*channel.Channel     `protobuf:"bytes,8,rep,name=channels,proto3" json:"channels,omitempty"`
	OffsetFrom       string                 `protobuf:"bytes,9,opt,name=offsetFrom,proto3" json:"offsetFrom,omitempty"`
	OffsetFor        string                 `protobuf:"bytes,10,opt,name=offsetFor,proto3" json:"offsetFor,omitempty"`
	Availability     string                 `protobuf:"bytes,11,opt,name=availability,proto3" json:"availability,omitempty"`
	OnDemandRule     string                 `protobuf:"bytes,12,opt,name=onDemandRule,proto3" json:"onDemandRule,omitempty"`
	LicensedEpisodes int64                  `protobuf:"varint,13,opt,name=licensedEpisodes,proto3" json:"licensedEpisodes,omitempty"`
	NumberOfEpisodes int64                  `protobuf:"varint,14,opt,name=numberOfEpisodes,proto3" json:"numberOfEpisodes,omitempty"`
	LandmarkRightsID string                 `protobuf:"bytes,15,opt,name=landmarkRightsID,proto3" json:"landmarkRightsID,omitempty"` // Refers Contract.rightsId
}

func (x *Rights) Reset() {
	*x = Rights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_rights_rights_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rights) ProtoMessage() {}

func (x *Rights) ProtoReflect() protoreflect.Message {
	mi := &file_settings_rights_rights_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rights.ProtoReflect.Descriptor instead.
func (*Rights) Descriptor() ([]byte, []int) {
	return file_settings_rights_rights_proto_rawDescGZIP(), []int{0}
}

func (x *Rights) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rights) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Rights) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Rights) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Rights) GetContract() *Contract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *Rights) GetProgrammeId() int64 {
	if x != nil {
		return x.ProgrammeId
	}
	return 0
}

func (x *Rights) GetTerritories() []*territory.Territory {
	if x != nil {
		return x.Territories
	}
	return nil
}

func (x *Rights) GetChannels() []*channel.Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *Rights) GetOffsetFrom() string {
	if x != nil {
		return x.OffsetFrom
	}
	return ""
}

func (x *Rights) GetOffsetFor() string {
	if x != nil {
		return x.OffsetFor
	}
	return ""
}

func (x *Rights) GetAvailability() string {
	if x != nil {
		return x.Availability
	}
	return ""
}

func (x *Rights) GetOnDemandRule() string {
	if x != nil {
		return x.OnDemandRule
	}
	return ""
}

func (x *Rights) GetLicensedEpisodes() int64 {
	if x != nil {
		return x.LicensedEpisodes
	}
	return 0
}

func (x *Rights) GetNumberOfEpisodes() int64 {
	if x != nil {
		return x.NumberOfEpisodes
	}
	return 0
}

func (x *Rights) GetLandmarkRightsID() string {
	if x != nil {
		return x.LandmarkRightsID
	}
	return ""
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Reference string          `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	RightsId  string          `protobuf:"bytes,4,opt,name=rightsId,proto3" json:"rightsId,omitempty"`
	Status    *ContractStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_rights_rights_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_settings_rights_rights_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_settings_rights_rights_proto_rawDescGZIP(), []int{1}
}

func (x *Contract) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Contract) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Contract) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Contract) GetRightsId() string {
	if x != nil {
		return x.RightsId
	}
	return ""
}

func (x *Contract) GetStatus() *ContractStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ContractStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ContractStatus) Reset() {
	*x = ContractStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settings_rights_rights_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractStatus) ProtoMessage() {}

func (x *ContractStatus) ProtoReflect() protoreflect.Message {
	mi := &file_settings_rights_rights_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractStatus.ProtoReflect.Descriptor instead.
func (*ContractStatus) Descriptor() ([]byte, []int) {
	return file_settings_rights_rights_proto_rawDescGZIP(), []int{2}
}

func (x *ContractStatus) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ContractStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_settings_rights_rights_proto protoreflect.FileDescriptor

var file_settings_rights_rights_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x2f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23,
	0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x1a, 0x22, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x74, 0x65,
	0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x04, 0x0a, 0x06, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x49,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0b, 0x74,
	0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x49, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x64, 0x45, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x64, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x6e,
	0x64, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x49, 0x44, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x49, 0x44, 0x22, 0xb7, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x49, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x62, 0x63, 0x75, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x34, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x42, 0x43, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x2f, 0x67, 0x76, 0x73, 0x2d, 0x6d, 0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x3b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_settings_rights_rights_proto_rawDescOnce sync.Once
	file_settings_rights_rights_proto_rawDescData = file_settings_rights_rights_proto_rawDesc
)

func file_settings_rights_rights_proto_rawDescGZIP() []byte {
	file_settings_rights_rights_proto_rawDescOnce.Do(func() {
		file_settings_rights_rights_proto_rawDescData = protoimpl.X.CompressGZIP(file_settings_rights_rights_proto_rawDescData)
	})
	return file_settings_rights_rights_proto_rawDescData
}

var file_settings_rights_rights_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_settings_rights_rights_proto_goTypes = []interface{}{
	(*Rights)(nil),              // 0: com.inbcu.rpc.types.settings.rights.Rights
	(*Contract)(nil),            // 1: com.inbcu.rpc.types.settings.rights.Contract
	(*ContractStatus)(nil),      // 2: com.inbcu.rpc.types.settings.rights.ContractStatus
	(*territory.Territory)(nil), // 3: com.inbcu.rpc.types.settings.territory.Territory
	(*channel.Channel)(nil),     // 4: com.inbcu.rpc.types.settings.channel.Channel
}
var file_settings_rights_rights_proto_depIdxs = []int32{
	1, // 0: com.inbcu.rpc.types.settings.rights.Rights.contract:type_name -> com.inbcu.rpc.types.settings.rights.Contract
	3, // 1: com.inbcu.rpc.types.settings.rights.Rights.territories:type_name -> com.inbcu.rpc.types.settings.territory.Territory
	4, // 2: com.inbcu.rpc.types.settings.rights.Rights.channels:type_name -> com.inbcu.rpc.types.settings.channel.Channel
	2, // 3: com.inbcu.rpc.types.settings.rights.Contract.status:type_name -> com.inbcu.rpc.types.settings.rights.ContractStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_settings_rights_rights_proto_init() }
func file_settings_rights_rights_proto_init() {
	if File_settings_rights_rights_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_settings_rights_rights_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_rights_rights_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settings_rights_rights_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settings_rights_rights_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_settings_rights_rights_proto_goTypes,
		DependencyIndexes: file_settings_rights_rights_proto_depIdxs,
		MessageInfos:      file_settings_rights_rights_proto_msgTypes,
	}.Build()
	File_settings_rights_rights_proto = out.File
	file_settings_rights_rights_proto_rawDesc = nil
	file_settings_rights_rights_proto_goTypes = nil
	file_settings_rights_rights_proto_depIdxs = nil
}
